name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'

jobs:
  # 🧪 Test Job - Run all tests in parallel
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run linter
        run: npm run lint

      - name: 🧪 Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info,./coverage/coverage-final.json
          fail_ci_if_error: false

      - name: 📚 Build Storybook
        run: npm run build-storybook

      - name: 📸 Upload Storybook artifacts
        uses: actions/upload-artifact@v4
        with:
          name: storybook-build
          path: storybook-static/
          retention-days: 7

  # 🎭 E2E Tests Job - Run Playwright tests (optional, runs if tests exist)
  e2e-test:
    name: 🎭 E2E Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' # Only run E2E on push, not PRs

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps

      - name: 🎭 Run Playwright tests
        run: npx playwright test
        continue-on-error: true # Don't fail deployment if E2E tests fail

      - name: 📸 Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  # Note: Removed redundant build job - Docker handles building during deployment

  # 🚀 Deploy Job - Deploy to Fly.io
  deploy:
    name: 🚀 Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🪰 Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: 🚀 Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.PERSONAL_WEBSITE_DEPLOY_TOKEN }}

  # 🔔 Notify Job - Send deployment notification
  notify:
    name: 🔔 Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always() && github.ref == 'refs/heads/main'

    steps:
      - name: 🎉 Deployment Success
        if: needs.deploy.result == 'success'
        run: |
          echo "🎉 Deployment successful!"
          echo "🌐 Website is live at: https://your-app-name.fly.dev"

      - name: 🚨 Deployment Failed
        if: needs.deploy.result == 'failure'
        run: |
          echo "🚨 Deployment failed!"
          echo "📋 Check the logs above for details"
          exit 1
